<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_542049_ideas.SqsRequest</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>SqsRequest</name>
        <script><![CDATA[function SqsRequest(uri, data) {
	// If only one queue will ever be used, the queue name could be hard coded into this function
	// For now, assume multiple queues and require the caller to specify the correct queue.
	var ecc = new GlideRecord('ecc_queue');
	ecc.initialize();
	// It should be possible to assign a tag (like AWS) to a MID server and 
	// then find a MID server with that tag when making the request.
	// For now, just hard code the correct server.
	ecc.agent = 'mid.server.sntest';
	ecc.topic = "Command";
	ecc.queue = "output";
	var cmd = "aws sqs send-message --region us-east-1 --queue-url " + uri + " --message-body=" + encodeURI(data);
	ecc.payload='<parameters><parameter name="name" value="'+cmd+'"/></parameters>';
	ecc.insert();
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2020-11-03 19:34:12</sys_created_on>
        <sys_id>b95ea0492f9c2050749af64ef699b6c3</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>SqsRequest</sys_name>
        <sys_package display_value="IDEAS" source="x_542049_ideas">e520e4ba2f88a810749af64ef699b609</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="IDEAS">e520e4ba2f88a810749af64ef699b609</sys_scope>
        <sys_update_name>sys_script_include_b95ea0492f9c2050749af64ef699b6c3</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-11-03 22:41:45</sys_updated_on>
    </sys_script_include>
</record_update>
